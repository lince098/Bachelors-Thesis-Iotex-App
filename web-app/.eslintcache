[{"/home/lince098/Escritorio/TFG/web-app/src/index.js":"1","/home/lince098/Escritorio/TFG/web-app/src/App.js":"2","/home/lince098/Escritorio/TFG/web-app/src/reportWebVitals.js":"3","/home/lince098/Escritorio/TFG/web-app/src/utils/antanna.ts":"4","/home/lince098/Escritorio/TFG/web-app/src/utils/index.ts":"5","/home/lince098/Escritorio/TFG/web-app/src/utils/ws-plugin.ts":"6","/home/lince098/Escritorio/TFG/web-app/src/utils/js-plugin.ts":"7","/home/lince098/Escritorio/TFG/web-app/src/utils/helper.ts":"8","/home/lince098/Escritorio/TFG/web-app/src/utils/eventBus.ts":"9","/home/lince098/Escritorio/TFG/web-app/src/configs/public.ts":"10","/home/lince098/Escritorio/TFG/web-app/src/utils/env.js":"11","/home/lince098/Escritorio/TFG/web-app/src/components/Navbar.jsx":"12","/home/lince098/Escritorio/TFG/web-app/src/components/VistaPistas.jsx":"13","/home/lince098/Escritorio/TFG/web-app/src/utils/PistaUtils.js":"14","/home/lince098/Escritorio/TFG/web-app/src/store/wallet.ts":"15","/home/lince098/Escritorio/TFG/web-app/src/store/store.js":"16","/home/lince098/Escritorio/TFG/web-app/src/utils/hooks.ts":"17","/home/lince098/Escritorio/TFG/web-app/src/components/Reserva.jsx":"18","/home/lince098/Escritorio/TFG/web-app/src/components/VistaAdmin.jsx":"19","/home/lince098/Escritorio/TFG/web-app/src/components/FormsVistaAdmin/FormPrecio.jsx":"20","/home/lince098/Escritorio/TFG/web-app/src/components/FormsVistaAdmin/FormEstadoPista.jsx":"21","/home/lince098/Escritorio/TFG/web-app/src/components/FormsVistaAdmin/FormTiempoExtra.jsx":"22","/home/lince098/Escritorio/TFG/web-app/src/components/FormsVistaAdmin/FormDarRolGestor.jsx":"23"},{"size":474,"mtime":1613063684013,"results":"24","hashOfConfig":"25"},{"size":1691,"mtime":1616351525706,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1611947592153,"results":"27","hashOfConfig":"25"},{"size":3667,"mtime":1613063799216,"results":"28","hashOfConfig":"25"},{"size":170,"mtime":1600704168054,"results":"29","hashOfConfig":"25"},{"size":2841,"mtime":1611961947420,"results":"30","hashOfConfig":"25"},{"size":5969,"mtime":1600704168058,"results":"31","hashOfConfig":"25"},{"size":821,"mtime":1611961472444,"results":"32","hashOfConfig":"25"},{"size":392,"mtime":1600704168054,"results":"33","hashOfConfig":"25"},{"size":12574,"mtime":1614086097378,"results":"34","hashOfConfig":"25"},{"size":818,"mtime":1611961979820,"results":"35","hashOfConfig":"25"},{"size":1328,"mtime":1616352420218,"results":"36","hashOfConfig":"25"},{"size":3264,"mtime":1614080678677,"results":"37","hashOfConfig":"25"},{"size":7212,"mtime":1616353387437,"results":"38","hashOfConfig":"25"},{"size":3162,"mtime":1616352090714,"results":"39","hashOfConfig":"25"},{"size":324,"mtime":1612905859334,"results":"40","hashOfConfig":"25"},{"size":697,"mtime":1613063936054,"results":"41","hashOfConfig":"25"},{"size":2772,"mtime":1614163164838,"results":"42","hashOfConfig":"25"},{"size":2957,"mtime":1616352219934,"results":"43","hashOfConfig":"25"},{"size":3372,"mtime":1615225595307,"results":"44","hashOfConfig":"25"},{"size":2695,"mtime":1616322427391,"results":"45","hashOfConfig":"25"},{"size":1847,"mtime":1615226072955,"results":"46","hashOfConfig":"25"},{"size":1695,"mtime":1616351812753,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"12ikhe5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lince098/Escritorio/TFG/web-app/src/index.js",[],["100","101"],"/home/lince098/Escritorio/TFG/web-app/src/App.js",["102","103","104","105"],"/home/lince098/Escritorio/TFG/web-app/src/reportWebVitals.js",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/antanna.ts",["106"],"import Antenna from \"iotex-antenna\";\nimport { WsSignerPlugin } from \"./ws-plugin\";\nimport { utils } from \"./index\";\nimport { publicConfig } from \"../configs/public\";\nimport { IAccount } from \"iotex-antenna/lib/account/account\";\nimport { JsBridgeSignerMobile } from \"./js-plugin\";\nimport { eventBus } from \"./eventBus\";\n\nexport class AntennaUtils {\n  public static defaultContractOptions = {\n    gasLimit: \"20000000\",\n    gasPrice: \"1000000000000\",\n  };\n  public static antenna: Antenna | undefined = undefined;\n  public static wsSigner: WsSignerPlugin | undefined = undefined;\n  public static jsSigner: JsBridgeSignerMobile | undefined = undefined;\n  private static _defaultAccount: IAccount;\n\n  public static get account() {\n    return this.antenna?.iotx?.accounts[0];\n  }\n\n  static getAntenna(): undefined | Antenna {\n    if (this.antenna) {\n      return this.antenna;\n    }\n    if (utils.env.isBrowser() && !utils.env.isIoPayMobile()) {\n      this.wsSigner = new WsSignerPlugin({\n        options: {\n          packMessage: (data) => JSON.stringify(data),\n          //@ts-ignore\n          unpackMessage: (data) => JSON.parse(data),\n          attachRequestId: (data, requestId) =>\n            Object.assign({ reqId: requestId }, data),\n          extractRequestId: (data) => data && data.reqId,\n        },\n      });\n\n      const antenna = new Antenna(publicConfig.IOTEX_CORE_ENDPOPINT, {\n        signer: this.wsSigner.start(),\n      });\n      //@ts-ignore\n      this.antenna = antenna;\n      return antenna;\n    }\n    if (utils.env.isIoPayMobile()) {\n      this.jsSigner = new JsBridgeSignerMobile();\n      const antenna = new Antenna(publicConfig.IOTEX_CORE_ENDPOPINT, {\n        signer: this.jsSigner,\n      });\n      //@ts-ignore\n      this.antenna = antenna;\n      return antenna;\n    }\n\n    if (utils.env.isSSR()) {\n      const antenna = new Antenna(publicConfig.IOTEX_CORE_ENDPOPINT);\n      //@ts-ignore\n      this.antenna = antenna;\n      return antenna;\n    }\n  }\n\n  static async getIoPayAddress(): Promise<string> {\n    if (!AntennaUtils.antenna) {\n      AntennaUtils.antenna = AntennaUtils.getAntenna();\n    }\n    if (utils.env.isIoPayMobile()) {\n      //@ts-ignore\n      const address = await AntennaUtils.jsSigner.getIoAddressFromIoPay();\n      //@ts-ignore\n      AntennaUtils.antenna.iotx.accounts[0] = await AntennaUtils.jsSigner.getAccount(\n        address\n      );\n      return address;\n    }\n    if (utils.env.isBrowser()) {\n      //@ts-ignore\n      const accounts = await AntennaUtils.wsSigner.getAccounts();\n      if (accounts[0]) {\n        //@ts-ignore\n        AntennaUtils.antenna.iotx.accounts[0] = await AntennaUtils.wsSigner.getAccount(\n          accounts[0].address\n        );\n      }\n      return (accounts && accounts[0] && accounts[0].address) || \"\";\n    }\n    return \"\";\n  }\n\n  static async getIotxBalance(address: string): Promise<number> {\n    const antenna = AntennaUtils.getAntenna();\n    //@ts-ignore\n    const { accountMeta } = await antenna.iotx.getAccount({ address });\n    // @ts-ignore\n    return Number(fromRau(accountMeta.balance, \"Iotx\"));\n  }\n\n  static async signMessage(message: string): Promise<string> {\n    const antenna = AntennaUtils.getAntenna();\n    //@ts-ignore\n    if (antenna.iotx.signer && antenna.iotx.signer.signMessage) {\n      //@ts-ignore\n      const signed = await antenna.iotx.signer.signMessage(message);\n      if (typeof signed === \"object\") {\n        return Buffer.from(signed).toString(\"hex\");\n      }\n      return signed;\n    }\n    //@ts-ignore\n    const account = antenna.iotx.accounts[0];\n    const sig = account && (await account.sign(message));\n    return (sig && sig.toString(\"hex\")) || \"\";\n  }\n}\n",["107","108"],"/home/lince098/Escritorio/TFG/web-app/src/utils/index.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/ws-plugin.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/js-plugin.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/helper.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/eventBus.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/configs/public.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/env.js",[],"/home/lince098/Escritorio/TFG/web-app/src/components/Navbar.jsx",[],"/home/lince098/Escritorio/TFG/web-app/src/components/VistaPistas.jsx",["109"],"import { Table, Button, Form } from \"react-bootstrap\";\nimport { getAll, Estados, isReservable } from \"../utils/PistaUtils\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst alignRightStyle = {\n  justifyContent: \"center\",\n};\n\nfunction PistaFila({ pista }) {\n  const history = useHistory();\n  let estado = \"\";\n  switch (parseInt(pista.estado, \"10\")) {\n    case Estados.Apagado:\n      estado = \"Apagado\";\n      break;\n\n    case Estados.Encendido:\n      estado = \"Forzado a encendido\";\n      break;\n\n    case Estados.Funcionando:\n      estado = \"Operativa\";\n      break;\n  }\n\n  const buttonOnClick = (event) => {\n    event.preventDefault();\n    const next = \"/pista/\" + pista.id;\n    history.push(next);\n  };\n\n  let button = \"\";\n  if (isReservable(pista)) {\n    button = (\n      <Button variant=\"success\" onClick={buttonOnClick}>\n        Reserve ahora{\" \"}\n      </Button>\n    );\n  } else {\n    button = (\n      <Button variant=\"danger\" disabled>\n        Pista ocupada\n      </Button>\n    );\n  }\n\n  const date = new Date(pista.plazoEncendido * 1000);\n\n  return (\n    <tr>\n      <td>{pista.id}</td>\n      <td>{pista.nombre}</td>\n      <td>{estado}</td>\n      <td>\n        {date.getDate()}-{date.getMonth() + 1}-{date.getFullYear()}{\" \"}\n        {date.getHours()}:{date.getMinutes()}:{date.getSeconds()}\n      </td>\n      <td>{button}</td>\n    </tr>\n  );\n}\n\nexport default function TablaPistas() {\n  const [pistas, setPistas] = useState([]);\n  const [filtro, setFiltro] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n\n  useEffect(() => {\n    getAll().then((data) => {\n      setPistas(data);\n    });\n  }, []);\n\n  const boxOnChange = (event) => {\n    const chk = event.target.checked;\n    setChecked(chk);\n  };\n\n  const filtroOnChange = (event) => {\n    event.preventDefault();\n    const filtr = event.target.value;\n    setFiltro(filtr);\n  };\n\n  let pistasMostradas = pistas;\n\n  if (filtro !== \"\") {\n    pistasMostradas = pistasMostradas.filter((pista) =>\n      pista.nombre.toUpperCase().includes(filtro.toUpperCase())\n    );\n  }\n\n  if (checked) {\n    pistasMostradas = pistasMostradas.filter((pista) => isReservable(pista));\n  }\n\n  const pistaRender = pistasMostradas.map((pista) => (\n    <PistaFila key={pista.id} pista={pista} />\n  ));\n\n  return (\n    <div>\n      <Form inline className=\"my-2\" style={alignRightStyle}>\n        <Form.Label className=\"my-1 mr-2\" htmlFor=\"filtroNombre\">\n          Filtro por nombre:\n        </Form.Label>\n        <Form.Control\n          onChange={filtroOnChange}\n          type=\"text\"\n          className=\"my-1 mr-sm-2\"\n          id=\"filtroNombre\"\n        />\n\n        <Form.Label className=\"my-1 mr-2\" htmlFor=\"filtroReservable\">\n          Filtro de reservables:\n        </Form.Label>\n        <Form.Control\n          onChange={boxOnChange}\n          type=\"checkbox\"\n          className=\"my-1 mr-sm-2\"\n          id=\"filtroReservable\"\n        />\n      </Form>\n\n      <Table bordered striped>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Nombre</th>\n            <th>Estado</th>\n            <th>Ocupado hasta</th>\n            <th>Reservar</th>\n          </tr>\n        </thead>\n        <tbody>{pistaRender}</tbody>\n      </Table>\n    </div>\n  );\n}\n","/home/lince098/Escritorio/TFG/web-app/src/utils/PistaUtils.js",["110","111","112","113","114","115","116","117"],"/home/lince098/Escritorio/TFG/web-app/src/store/wallet.ts",["118"],"/home/lince098/Escritorio/TFG/web-app/src/store/store.js",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/hooks.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/components/Reserva.jsx",["119"],"import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { getPistaObject, getPrecio } from \"../utils/PistaUtils\";\nimport { fromRau } from \"iotex-antenna/lib/account/utils\";\nimport { reservar } from \"../utils/PistaUtils\";\n\nexport default function Reserva() {\n  const id = useParams().id;\n  const [pista, setPista] = useState(undefined);\n  const [precioXMinuto, setPrecioXMinuto] = useState(0);\n  const [minutos, setMinutos] = useState(0);\n  const [logMessage, setLogMessage] = useState(\"\");\n\n  useEffect(() => {\n    getPistaObject(parseInt(id, \"10\")).then((response) => {\n      setPista(response);\n    });\n\n    getPrecio().then((response) => {\n      setPrecioXMinuto(response);\n    });\n  }, []);\n\n  function reservaOnClick(event) {\n    event.preventDefault();\n    reservar(pista, Number(minutos))\n      .then((response) => {\n        console.log(\"Then Log response: \", response);\n        const link = \"https://testnet.iotexscan.io/action/\" + response;\n        setLogMessage(\n          <p className=\"text-success\">\n            La transacción se ha enviado con éxito, puedes verificar si se ha\n            ejecutado correctamente clicando aquí: <a href={link}>{link}</a>.\n          </p>\n        );\n      })\n      .catch((response) => {\n        console.log(\"Catch response: \", response);\n        setLogMessage(\n          <p className=\"text-danger\">\n            La transacción no ha podido realizarse debido al error interno: {\"\"}\n          </p>\n        );\n        console.log(response);\n      });\n  }\n  function minutosOnChange(event) {\n    setMinutos(event.target.value);\n  }\n\n  let precioRender = 0;\n  if (precioXMinuto !== 0) {\n    precioRender = fromRau(precioXMinuto, \"IOTX\");\n    console.log(\"PrecioRender: \", precioRender, typeof precioRender);\n  }\n\n  return (\n    <div>\n      <Form className=\"mx-5\">\n        <Form.Group as={Row} controlId=\"formPrecioBlank\">\n          <Form.Label column sm=\"2\">\n            Precio por minuto:\n          </Form.Label>\n          <Col sm=\"10\">\n            <Form.Control\n              type=\"text\"\n              value={precioRender + \" IOTX\"}\n              readOnly\n            ></Form.Control>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"formMinutos\">\n          <Form.Label column sm=\"2\">\n            Minutos:\n          </Form.Label>\n          <Col sm=\"10\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Tiempo ej: 1,2,60\"\n              onChange={minutosOnChange}\n            />\n          </Col>\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={reservaOnClick}>\n          Enviar\n        </Button>\n        {logMessage}\n      </Form>\n    </div>\n  );\n}\n","/home/lince098/Escritorio/TFG/web-app/src/components/VistaAdmin.jsx",["120","121","122","123"],"/home/lince098/Escritorio/TFG/web-app/src/components/FormsVistaAdmin/FormPrecio.jsx",[],"/home/lince098/Escritorio/TFG/web-app/src/components/FormsVistaAdmin/FormEstadoPista.jsx",["124","125"],"import { Button, Form, Row, Col } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { setPistaEstado } from \"../../utils/PistaUtils\";\nimport { set } from \"mobx\";\n\nconst FormEstadoPista = () => {\n  const [mensaje, setMensaje] = useState(\"\");\n  const [id, setId] = useState(null);\n  const [estado, setEstado] = useState(1);\n\n  function idOnChange(event) {\n    console.log(event.target.value);\n    const idNumber = parseInt(event.target.value);\n    if (idNumber !== NaN && idNumber >= 0) {\n      setId(idNumber);\n    }\n  }\n\n  function estadoOnChange(event) {\n    console.log(event.target.value);\n    const estadoNumber = parseInt(event.target.value);\n    if (estadoNumber >= 0 && estadoNumber <= 2) {\n      setEstado(estadoNumber);\n    }\n  }\n\n  function enviar() {\n    console.log(\"Enviar\", id,estado);\n    if (id !== null && estado !== null) {\n      console.log(\"Pasa el if\");\n      setPistaEstado(id,estado)\n        .then((response) => {\n          console.log(\"Then Log response: \", response);\n          const link = \"https://testnet.iotexscan.io/action/\" + response;\n          setMensaje(\n            <p className=\"text-success\">\n              La transacción se ha enviado con éxito, puedes verificar si se ha\n              ejecutado correctamente clicando aquí: <a href={link}>{link}</a>.\n            </p>\n          );\n        })\n        .catch((response) => {\n          console.log(\"Catch response: \", response);\n          setMensaje(\n            <p className=\"text-danger\">\n              La transacción no ha podido realizarse debido al error interno:{\" \"}\n              {\"\"}\n            </p>\n          );\n          console.log(response);\n        });\n    }\n  }\n\n  return (\n    <Form>\n      <Form.Group as={Row} controlId=\"formEstadoPistaId\">\n        <Form.Label column sm={2}>\n          Id de la pista\n        </Form.Label>\n        <Col sm={10}>\n          <Form.Control type=\"text\" onChange={idOnChange} placeholder=\"\" />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formEstadoPistaEstado\">\n        <Form.Label column sm={2}>\n          Estado\n        </Form.Label>\n        <Col sm={10}>\n          <Form.Control\n            as=\"select\"\n            onChange={estadoOnChange}\n            value=\"1\"\n          >\n            <option value=\"0\">Apagado</option>\n            <option value=\"1\">Funcionando</option>\n            <option value=\"2\">Encendido</option>\n          </Form.Control>\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row}>\n        <Col sm={{ span: 10, offset: 2 }}>\n          <Button onClick={enviar}>Enviar</Button>\n        </Col>\n        {mensaje}\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default FormEstadoPista;\n","/home/lince098/Escritorio/TFG/web-app/src/components/FormsVistaAdmin/FormTiempoExtra.jsx",[],"/home/lince098/Escritorio/TFG/web-app/src/components/FormsVistaAdmin/FormDarRolGestor.jsx",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":10,"column":10,"nodeType":"132","messageId":"133","endLine":10,"endColumn":31},{"ruleId":"130","severity":1,"message":"134","line":10,"column":33,"nodeType":"132","messageId":"133","endLine":10,"endColumn":46},{"ruleId":"130","severity":1,"message":"135","line":12,"column":10,"nodeType":"132","messageId":"133","endLine":12,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":25,"column":6,"nodeType":"138","endLine":25,"endColumn":8,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":7,"column":10,"nodeType":"132","messageId":"133","endLine":7,"endColumn":18},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"142","severity":1,"message":"143","line":13,"column":3,"nodeType":"144","messageId":"145","endLine":25,"endColumn":4},{"ruleId":"130","severity":1,"message":"146","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":17},{"ruleId":"130","severity":1,"message":"147","line":37,"column":9,"nodeType":"132","messageId":"133","endLine":37,"endColumn":16},{"ruleId":"130","severity":1,"message":"147","line":54,"column":9,"nodeType":"132","messageId":"133","endLine":54,"endColumn":16},{"ruleId":"130","severity":1,"message":"147","line":68,"column":9,"nodeType":"132","messageId":"133","endLine":68,"endColumn":16},{"ruleId":"130","severity":1,"message":"147","line":81,"column":9,"nodeType":"132","messageId":"133","endLine":81,"endColumn":16},{"ruleId":"130","severity":1,"message":"147","line":98,"column":9,"nodeType":"132","messageId":"133","endLine":98,"endColumn":16},{"ruleId":"130","severity":1,"message":"147","line":114,"column":9,"nodeType":"132","messageId":"133","endLine":114,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":266,"column":3,"nodeType":"144","messageId":"145","endLine":278,"endColumn":4},{"ruleId":"140","severity":1,"message":"148","line":5,"column":19,"nodeType":"132","messageId":"133","endLine":5,"endColumn":24},{"ruleId":"136","severity":1,"message":"149","line":23,"column":6,"nodeType":"138","endLine":23,"endColumn":8,"suggestions":"150"},{"ruleId":"130","severity":1,"message":"151","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":18},{"ruleId":"130","severity":1,"message":"152","line":2,"column":35,"nodeType":"132","messageId":"133","endLine":2,"endColumn":39},{"ruleId":"130","severity":1,"message":"153","line":2,"column":41,"nodeType":"132","messageId":"133","endLine":2,"endColumn":44},{"ruleId":"130","severity":1,"message":"154","line":2,"column":46,"nodeType":"132","messageId":"133","endLine":2,"endColumn":49},{"ruleId":"130","severity":1,"message":"155","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":14,"column":9,"nodeType":"158","messageId":"159","endLine":14,"endColumn":25},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'isLoggedAccountGestor' is defined but never used.","Identifier","unusedVar","'getRoleGestor' is defined but never used.","'action' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'wallet'. Either include it or remove the dependency array.","ArrayExpression",["162"],"@typescript-eslint/no-unused-vars","'eventBus' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'fromRau' is defined but never used.","'antenna' is assigned a value but never used.","'toRau' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["163"],"'observer' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'set' is defined but never used.","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [wallet]",{"range":"168","text":"169"},"Update the dependencies array to be: [id]",{"range":"170","text":"171"},[902,904],"[wallet]",[790,792],"[id]"]