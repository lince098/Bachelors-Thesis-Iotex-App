[{"/home/lince098/Escritorio/TFG/web-app/src/index.js":"1","/home/lince098/Escritorio/TFG/web-app/src/App.js":"2","/home/lince098/Escritorio/TFG/web-app/src/reportWebVitals.js":"3","/home/lince098/Escritorio/TFG/web-app/src/utils/antanna.ts":"4","/home/lince098/Escritorio/TFG/web-app/src/utils/index.ts":"5","/home/lince098/Escritorio/TFG/web-app/src/utils/ws-plugin.ts":"6","/home/lince098/Escritorio/TFG/web-app/src/utils/js-plugin.ts":"7","/home/lince098/Escritorio/TFG/web-app/src/utils/helper.ts":"8","/home/lince098/Escritorio/TFG/web-app/src/utils/eventBus.ts":"9","/home/lince098/Escritorio/TFG/web-app/src/configs/public.ts":"10","/home/lince098/Escritorio/TFG/web-app/src/utils/env.js":"11","/home/lince098/Escritorio/TFG/web-app/src/components/Navbar.jsx":"12","/home/lince098/Escritorio/TFG/web-app/src/components/VistaPistas.jsx":"13","/home/lince098/Escritorio/TFG/web-app/src/utils/PistaUtils.js":"14"},{"size":503,"mtime":1612351810197,"results":"15","hashOfConfig":"16"},{"size":737,"mtime":1612354950872,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611947592153,"results":"18","hashOfConfig":"16"},{"size":3664,"mtime":1611961283939,"results":"19","hashOfConfig":"16"},{"size":170,"mtime":1600704168054,"results":"20","hashOfConfig":"16"},{"size":2841,"mtime":1611961947420,"results":"21","hashOfConfig":"16"},{"size":5969,"mtime":1600704168058,"results":"22","hashOfConfig":"16"},{"size":821,"mtime":1611961472444,"results":"23","hashOfConfig":"16"},{"size":392,"mtime":1600704168054,"results":"24","hashOfConfig":"16"},{"size":6685,"mtime":1612352064912,"results":"25","hashOfConfig":"16"},{"size":818,"mtime":1611961979820,"results":"26","hashOfConfig":"16"},{"size":828,"mtime":1612275356378,"results":"27","hashOfConfig":"16"},{"size":1497,"mtime":1612276521587,"results":"28","hashOfConfig":"16"},{"size":1605,"mtime":1612351395991,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12ikhe5",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},"/home/lince098/Escritorio/TFG/web-app/src/index.js",[],"/home/lince098/Escritorio/TFG/web-app/src/App.js",["64"],"/home/lince098/Escritorio/TFG/web-app/src/reportWebVitals.js",[],["65","66"],"/home/lince098/Escritorio/TFG/web-app/src/utils/antanna.ts",["67"],"import Antenna from \"iotex-antenna\";\nimport { WsSignerPlugin } from \"./ws-plugin\";\nimport { utils } from \"./index\";\nimport { publicConfig } from \"../configs/public\";\nimport { IAccount } from \"iotex-antenna/lib/account/account\";\nimport { JsBridgeSignerMobile } from \"./js-plugin\";\nimport { eventBus } from \"./eventBus\";\n\nexport class AntennaUtils {\n  public static defaultContractOptions = {\n    gasLimit: \"20000000\",\n    gasPrice: \"1000000000000\",\n  };\n  public static antenna: Antenna | undefined = undefined;\n  public static wsSigner: WsSignerPlugin | undefined = undefined;\n  public static jsSigner: JsBridgeSignerMobile | undefined = undefined;\n  private static _defaultAccount: IAccount;\n\n  public static get account() {\n    return this.antenna?.iotx?.accounts[0];\n  }\n\n  static getAntenna(): undefined | Antenna {\n    if (this.antenna) {\n      return this.antenna;\n    }\n    if (utils.env.isBrowser() && !utils.env.isIoPayMobile()) {\n      this.wsSigner = new WsSignerPlugin({\n        options: {\n          packMessage: (data) => JSON.stringify(data),\n          //@ts-ignore\n          unpackMessage: (data) => JSON.parse(data),\n          attachRequestId: (data, requestId) =>\n            Object.assign({ reqId: requestId }, data),\n          extractRequestId: (data) => data && data.reqId,\n        },\n      });\n      const antenna = new Antenna(publicConfig.IOTEX_CORE_ENDPOPINT, {\n        signer: this.wsSigner.start(),\n      });\n      //@ts-ignore\n      this.antenna = antenna;\n      return antenna;\n    }\n    if (utils.env.isIoPayMobile()) {\n      this.jsSigner = new JsBridgeSignerMobile();\n      const antenna = new Antenna(publicConfig.IOTEX_CORE_ENDPOPINT, {\n        signer: this.jsSigner,\n      });\n      //@ts-ignore\n      this.antenna = antenna;\n      return antenna;\n    }\n\n    if (utils.env.isSSR()) {\n      const antenna = new Antenna(publicConfig.IOTEX_CORE_ENDPOPINT);\n      //@ts-ignore\n      this.antenna = antenna;\n      return antenna;\n    }\n  }\n\n  static async getIoPayAddress(): Promise<string>{\n    if (!AntennaUtils.antenna) {\n      AntennaUtils.antenna = AntennaUtils.getAntenna();\n    }\n    if (utils.env.isIoPayMobile()) {\n      //@ts-ignore\n      const address = await AntennaUtils.jsSigner.getIoAddressFromIoPay();\n      //@ts-ignore\n      AntennaUtils.antenna.iotx.accounts[0] = await AntennaUtils.jsSigner.getAccount(\n        address\n      );\n      return address;\n    }\n    if (utils.env.isBrowser()) {\n      //@ts-ignore\n      const accounts = await AntennaUtils.wsSigner.getAccounts();\n      if (accounts[0]) {\n        //@ts-ignore\n        AntennaUtils.antenna.iotx.accounts[0] = await AntennaUtils.wsSigner.getAccount(\n          accounts[0].address\n        );\n      }\n      return (accounts && accounts[0] && accounts[0].address) || \"\";\n    }\n    return \"\"\n  }\n\n  static async getIotxBalance(address: string): Promise<number> {\n    const antenna = AntennaUtils.getAntenna();\n    //@ts-ignore\n    const { accountMeta } = await antenna.iotx.getAccount({ address });\n    // @ts-ignore\n    return Number(fromRau(accountMeta.balance, \"Iotx\"));\n  }\n\n  static async signMessage(message: string): Promise<string> {\n    const antenna = AntennaUtils.getAntenna();\n    //@ts-ignore\n    if (antenna.iotx.signer && antenna.iotx.signer.signMessage) {\n      //@ts-ignore\n      const signed = await antenna.iotx.signer.signMessage(message);\n      if (typeof signed === \"object\") {\n        return Buffer.from(signed).toString(\"hex\");\n      }\n      return signed;\n    }\n    //@ts-ignore\n    const account = antenna.iotx.accounts[0];\n    const sig = account && (await account.sign(message));\n    return (sig && sig.toString(\"hex\")) || \"\";\n  }\n}\n",["68","69"],"/home/lince098/Escritorio/TFG/web-app/src/utils/index.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/ws-plugin.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/js-plugin.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/helper.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/eventBus.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/configs/public.ts",[],"/home/lince098/Escritorio/TFG/web-app/src/utils/env.js",[],"/home/lince098/Escritorio/TFG/web-app/src/components/Navbar.jsx",["70"],"import react from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport IconoPadel from \"../assets/IconoPadel.png\";\nexport default function MyNavbar() {\n  return (\n    <Navbar bg=\"success\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          alt=\"\"\n          src={IconoPadel}\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />{\" \"}\n        Nombre de la web\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          <Nav.Link href=\"#features\">Tutorial</Nav.Link>\n          <Nav.Link href=\"#pricing\">Pistas</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","/home/lince098/Escritorio/TFG/web-app/src/components/VistaPistas.jsx",["71","72"],"import react from \"react\";\nimport { Table, Button, Form, Col } from \"react-bootstrap\";\n\nconst alignRightStyle = {\n  justifyContent: \"center\"\n};\n\nexport default function TablaPistas() {\n  return (\n    <div>\n      <Form inline className=\"my-2\" style={alignRightStyle}>\n        <Form.Label className=\"my-1 mr-2\" htmlFor=\"inlineFormCustomSelectPref\">\n          Filtro por centro:\n        </Form.Label>\n        <Form.Control\n          as=\"select\"\n          className=\"my-1 mr-sm-2\"\n          id=\"inlineFormCustomSelectPref\"\n        >\n          <option>1</option>\n          <option>2</option>\n          <option>3</option>\n          <option>4</option>\n          <option>5</option>\n        </Form.Control>\n        <Button variant=\"primary\" type=\"submit\" className=\"text-left\">\n          Submit\n        </Button>\n      </Form>\n\n      <Table bordered striped>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>1</td>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n          </tr>\n          <tr>\n            <td>2</td>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n          </tr>\n          <tr>\n            <td>3</td>\n            <td colSpan=\"2\">Larry the Bird</td>\n            <td>@twitter</td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","/home/lince098/Escritorio/TFG/web-app/src/utils/PistaUtils.js",["73","74"],"import { publicConfig } from \"../configs/public\";\nimport { AntennaUtils } from \"./antanna\";\nconst BN = require(\"bn.js\");\n\nconst Estados = {\n  Apagado: 0,\n  Funcionando: 1,\n  Encendido: 2,\n};\n\nexport async function getAll() {\n  const antenna = AntennaUtils.getAntenna();\n  console.log(publicConfig);\n  const pistas = await antenna.iotx.readContractByMethod({\n    from: await AntennaUtils.getIoPayAddress(),\n    contractAddress: publicConfig.CONTRATO_DIRECCION,\n    abi: publicConfig.CONTRATO_ABI,\n    method: \"getAllPistas\",\n  });\n  return pistas;\n}\n\nexport const getPista = async (idPista) => {\n  const antenna = AntennaUtils.getAntenna();\n  const pista = await antenna.iotx.readContractByMethod(\n    {\n      from: await AntennaUtils.getIoPayAddress(),\n      contractAddress: publicConfig.CONTRATO_DIRECCION,\n      abi: publicConfig.CONTRATO_ABI,\n      method: \"pistas\",\n    },\n    idPista\n  );\n  return pista;\n};\n\nexport const logPista = (pistaArray) => {\n  console.log(\"Nombre: \" + pistaArray[0]);\n  console.log(\"\\tPlazo:\" + pistaArray[1]);\n  console.log(\"\\tEstado:\" + pistaArray[2]);\n};\n\nexport const isEncendida = (pistaArray) => {\n  switch (pistaArray[2].toNumber()) {\n    case Estados.Apagado:\n      return false;\n\n    case Estados.Encendido:\n      return true;\n\n    case Estados.Funcionando:\n      const now = new Date();\n      const timestamp = Math.trunc(now.getTime() / 1000);\n      console.log(\"Momento Actual Truncado:\\n\" + timestamp);\n      console.log(\"Momento Actual :\\n\" + now.getTime());\n      console.log(\"Momento plazo:\" + pistaArray[1]);\n      return timestamp < pistaArray[1];\n  }\n};\n",{"ruleId":"75","severity":1,"message":"76","line":6,"column":26,"nodeType":"77","messageId":"78","endLine":6,"endColumn":34},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":7,"column":10,"nodeType":"77","messageId":"78","endLine":7,"endColumn":18},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"85","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"85","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"86","line":2,"column":31,"nodeType":"77","messageId":"78","endLine":2,"endColumn":34},{"ruleId":"75","severity":1,"message":"87","line":3,"column":7,"nodeType":"77","messageId":"78","endLine":3,"endColumn":9},{"ruleId":"88","severity":1,"message":"89","line":44,"column":3,"nodeType":"90","messageId":"91","endLine":58,"endColumn":4},"no-unused-vars","'logPista' is defined but never used.","Identifier","unusedVar","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'eventBus' is defined but never used.","'react' is defined but never used.","'Col' is defined but never used.","'BN' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]